object frmHelpGenerator: TfrmHelpGenerator
  Caption = 'pasdoc gui'
  ClientHeight = 467
  ClientWidth = 734
  Font.Height = -16
  Font.Name = 'MS Sans Serif'
  Menu = MainMenu1
  OnClose = FormClose
  OnCreate = FormCreate
  PixelsPerInch = 61
  Position = poScreenCenter
  TextHeight = 20
  HorzScrollBar.Page = 733
  VertScrollBar.Page = 466
  Left = 27
  Height = 493
  Top = 28
  Width = 734
  object PageControlMain: TPageControl
    ActivePage = tabSpellChecking
    Align = alClient
    TabIndex = 5
    TabOrder = 0
    Left = 144
    Height = 467
    Width = 590
    object tabOptions: TTabSheet
      Caption = 'Options'
      ClientHeight = 437
      ClientWidth = 586
      ImageIndex = 2
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object Label1: TLabel
        Anchors = [akTop, akRight]
        Caption = 'Properties, Methods, Events, and Fields to include'
        Color = clNone
        WordWrap = True
        Left = 12
        Height = 32
        Top = 130
        Width = 208
      end
      object Label2: TLabel
        Caption = 'Language (This is the language used in the generated output files.)'
        Color = clNone
        Left = 8
        Height = 27
        Top = 354
        Width = 420
      end
      object Label6: TLabel
        Caption = 'Project Name (The Project Name is used to name some of the generated output files.)'
        Color = clNone
        Left = 8
        Height = 18
        Top = 50
        Width = 510
      end
      object Label7: TLabel
        Caption = 'Message level (This controls what sort of messages will apear on the Generate tab when web pages are created.)'
        Color = clNone
        WordWrap = True
        Left = 86
        Height = 30
        Top = 410
        Width = 452
      end
      object Label11: TLabel
        Caption = 'Output Type :'
        Color = clNone
        FocusControl = comboGenerateFormat
        Left = 8
        Height = 19
        Top = 106
        Width = 102
      end
      object Label19: TLabel
        Caption = 'Title :'
        Color = clNone
        Left = 10
        Height = 14
        Top = 2
        Width = 30
      end
      object Label21: TLabel
        Anchors = [akTop, akRight]
        BorderSpacing.OnChange = nil
        Caption = 'Items to sort alphabetically'
        Color = clNone
        Left = 360
        Height = 21
        Top = 82
        Width = 208
      end
      object clbMethodVisibility: TCheckListBox
        Anchors = [akTop, akRight]
        Items.Strings = (
          'Published'
          'Public'
          'Protected'
          'Private'
          'Automated'
          'Implicit'
        )
        ItemHeight = 20
        OnClick = clbMethodVisibilityClick
        TabOrder = 3
        Left = 12
        Height = 130
        Top = 167
        Width = 223
        Data = {
          06000000000000000000
        }
      end
      object comboLanguages: TComboBox
        Anchors = [akTop, akLeft, akRight]
        ItemHeight = 20
        MaxLength = 0
        OnChange = comboLanguagesChange
        Style = csDropDownList
        TabOrder = 2
        Left = 8
        Height = 21
        Top = 383
        Width = 331
      end
      object edProjectName: TEdit
        Anchors = [akTop, akLeft, akRight]
        OnChange = SomethingChanged
        TabOrder = 0
        Left = 8
        Height = 23
        Top = 74
        Width = 323
      end
      object seVerbosity: TSpinEdit
        DecimalPlaces = 0
        MaxValue = 6
        OnChange = SomethingChanged
        TabOrder = 4
        Value = 2
        Left = 8
        Height = 30
        Top = 410
        Width = 64
      end
      object comboGenerateFormat: TComboBox
        ItemHeight = 20
        Items.Strings = (
          'HTML'
          'HTML Help Workshop'
          'LaTeX'
          'LaTeX for latex2rtf'
        )
        MaxLength = 0
        OnChange = comboGenerateFormatChange
        Style = csDropDownList
        TabOrder = 1
        Left = 104
        Height = 21
        Top = 106
        Width = 210
      end
      object edTitle: TEdit
        Anchors = [akTop, akLeft, akRight]
        OnChange = SomethingChanged
        TabOrder = 5
        Left = 8
        Height = 23
        Top = 18
        Width = 555
      end
      object CheckUseTipueSearch: TCheckBox
        Caption = 'Use tipue search engine in HTML output'
        OnChange = SomethingChanged
        TabOrder = 6
        Left = 8
        Height = 23
        Top = 298
        Width = 251
      end
      object CheckAutoAbstract: TCheckBox
        Caption = 'Automatically deduce @abstract description from the 1st sentence of description'
        OnChange = SomethingChanged
        TabOrder = 7
        Left = 8
        Height = 23
        Top = 322
        Width = 473
      end
      object clbSorting: TCheckListBox
        Anchors = [akTop, akRight]
        BorderSpacing.OnChange = nil
        Items.Strings = (
          'structures'
          'constants'
          'global functions'
          'types'
          'variables'
          'uses-clauses'
          'record-fields'
          'non-record-fields'
          'methods'
          'properties'
        )
        ItemHeight = 20
        OnClick = SomethingChanged
        TabOrder = 8
        Left = 360
        Height = 207
        Top = 104
        Width = 223
        Data = {
          0A00000000000000000000000000
        }
      end
    end
    object TabLocations: TTabSheet
      Caption = 'Locations'
      ClientHeight = 437
      ClientWidth = 586
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object Label14: TLabel
        Caption = 'Use custom CSS file with HTML output (leave empty to use default pasdoc.css) :'
        Color = clNone
        Left = 8
        Height = 18
        Top = 114
        Width = 448
      end
      object Label15: TLabel
        BorderSpacing.OnChange = nil
        Caption = 'Introduction file (optional):'
        Color = clNone
        Left = 8
        Height = 14
        Top = 10
        Width = 174
      end
      object Label16: TLabel
        BorderSpacing.OnChange = nil
        Caption = 'Conclusion file (optional):'
        Color = clNone
        Left = 8
        Height = 19
        Top = 58
        Width = 166
      end
      object Label3: TLabel
        BorderSpacing.OnChange = nil
        Caption = 'Output directory (This is the directory where the web pages will be created.) :'
        Color = clNone
        Left = 8
        Height = 14
        Top = 170
        Width = 432
      end
      object EditCssFileName: TFileNameEdit
        DialogTitle = 'Choose custom CSS file'
        Filter = 'Cascading Style Sheets (*.css)|*.css'
        ButtonWidth = 23
        NumGlyphs = 1
        TabOrder = 0
        OnChange = SomethingChanged
        OnChange = SomethingChanged
        TabOrder = 0
        Left = 8
        Height = 23
        Top = 136
        Width = 314
      end
      object EditIntroductionFileName: TFileNameEdit
        DialogTitle = 'Choose introduction file'
        ButtonWidth = 23
        NumGlyphs = 1
        BorderSpacing.OnChange = nil
        TabOrder = 1
        OnChange = SomethingChanged
        BorderSpacing.OnChange = nil
        OnChange = SomethingChanged
        TabOrder = 1
        Left = 6
        Height = 23
        Top = 30
        Width = 314
      end
      object EditConclusionFileName: TFileNameEdit
        DialogTitle = 'Choose conclusion file'
        ButtonWidth = 23
        NumGlyphs = 1
        BorderSpacing.OnChange = nil
        TabOrder = 2
        OnChange = SomethingChanged
        BorderSpacing.OnChange = nil
        OnChange = SomethingChanged
        TabOrder = 2
        Left = 4
        Height = 23
        Top = 81
        Width = 314
      end
      object btnBrowseOutputDirectory1: TButton
        Anchors = [akTop, akRight]
        BorderSpacing.OnChange = nil
        Caption = 'Browse'
        OnClick = btnBrowseOutputDirectoryClick
        TabOrder = 3
        Left = 486
        Height = 25
        Top = 194
        Width = 75
      end
      object edOutput: TEdit
        Anchors = [akTop, akLeft, akRight]
        BorderSpacing.OnChange = nil
        OnChange = SomethingChanged
        TabOrder = 4
        Left = 8
        Height = 23
        Top = 194
        Width = 474
      end
    end
    object tabGraphViz: TTabSheet
      Caption = 'GraphViz'
      ClientHeight = 437
      ClientWidth = 586
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object Label22: TLabel
        Caption = 'Latex graphics package'
        Color = clNone
        Left = 10
        Height = 17
        Top = 63
        Width = 170
      end
      object Label24: TLabel
        Caption = 'Required program: GraphViz'
        Color = clNone
        Left = 8
        Height = 17
        Top = 119
        Width = 180
      end
      object cbVizGraphClasses: TCheckBox
        Caption = 'Generate and use Classes diagram '
        OnChange = SomethingChanged
        TabOrder = 0
        Left = 8
        Height = 23
        Top = 10
        Width = 258
      end
      object cbVizGraphUses: TCheckBox
        Caption = 'Generate and use Uses diagram '
        OnChange = SomethingChanged
        TabOrder = 1
        Left = 8
        Height = 23
        Top = 34
        Width = 239
      end
      object comboLatexGraphicsPackage: TComboBox
        Enabled = False
        Items.Strings = (
          'None'
          'PDF'
          'DVI'
        )
        ItemIndex = 0
        MaxLength = 0
        OnChange = SomethingChanged
        Style = csDropDownList
        TabOrder = 2
        Text = 'None'
        Left = 10
        Height = 21
        Top = 88
        Width = 148
      end
      object edGraphVizUrl: TEdit
        TabOrder = 3
        Text = 'http://www.graphviz.org/'
        Left = 188
        Height = 23
        Top = 114
        Width = 160
      end
    end
    object tabLatexOptions: TTabSheet
      Caption = 'Latex Options'
      ClientHeight = 437
      ClientWidth = 586
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object Label17: TLabel
        BorderSpacing.OnChange = nil
        Caption = 'Hy-phen-at-ed words (Only English letters are allowed.)'
        Color = clNone
        Left = 124
        Height = 17
        Top = 9
        Width = 344
      end
      object rgLineBreakQuality: TRadioGroup
        Caption = 'Line Breaks'
        ItemIndex = 0
        Items.Strings = (
          'strict'
          'sloppy'
        )
        OnClick = SomethingChanged
        ParentColor = True
        Left = 12
        Height = 63
        Top = 7
        Width = 98
      end
      object memoHyphenatedWords: TMemo
        Anchors = [akTop, akLeft, akRight, akBottom]
        BorderSpacing.OnChange = nil
        OnChange = SomethingChanged
        TabOrder = 1
        Left = 124
        Height = 386
        Top = 31
        Width = 458
      end
    end
    object tabHeadFoot: TTabSheet
      Caption = 'Header / Footer'
      ClientHeight = 437
      ClientWidth = 586
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object Label4: TLabel
        BorderSpacing.OnChange = nil
        Caption = 'Footer (This text will appear at the bottom of the web page)'
        Color = clNone
        Left = 14
        Height = 20
        Top = 234
        Width = 429
      end
      object Label5: TLabel
        BorderSpacing.OnChange = nil
        Caption = 'Header (This text will appear at the top of the web page)'
        Color = clNone
        Left = 14
        Height = 20
        Top = 20
        Width = 408
      end
      object memoFooter: TMemo
        Anchors = [akTop, akLeft, akRight, akBottom]
        BorderSpacing.OnChange = nil
        OnChange = SomethingChanged
        TabOrder = 0
        WordWrap = False
        Left = 14
        Height = 173
        Top = 258
        Width = 558
      end
      object memoHeader: TMemo
        Anchors = [akTop, akLeft, akRight]
        BorderSpacing.OnChange = nil
        OnChange = SomethingChanged
        TabOrder = 1
        WordWrap = False
        Left = 12
        Height = 182
        Top = 44
        Width = 558
      end
    end
    object tabSpellChecking: TTabSheet
      Caption = 'Spell Checking'
      ClientHeight = 437
      ClientWidth = 586
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object memoSpellCheckingIgnore: TMemo
        Align = alClient
        ScrollBars = ssAutoBoth
        TabOrder = 0
        WordWrap = False
        Height = 369
        Top = 68
        Width = 586
      end
      object PanelSpellCheckingTop: TPanel
        Align = alTop
        BevelOuter = bvNone
        ClientHeight = 68
        ClientWidth = 586
        FullRepaint = False
        TabOrder = 1
        Height = 68
        Width = 586
        object Label20: TLabel
          BorderSpacing.OnChange = nil
          Caption = 'Words to ignore when spell checking :'
          Color = clNone
          Left = 14
          Height = 16
          Top = 42
          Width = 270
        end
        object Label23: TLabel
          Caption = 'Required Program: aspell'
          Color = clNone
          Left = 236
          Height = 17
          Top = 18
          Width = 163
        end
        object cbCheckSpelling: TCheckBox
          BorderSpacing.OnChange = nil
          Caption = 'Check Spelling'
          TabOrder = 0
          Left = 12
          Height = 23
          Top = 14
          Width = 132
        end
        object edSpellUrl: TEdit
          BorderSpacing.OnChange = nil
          TabOrder = 1
          Text = 'http://aspell.sourceforge.net/'
          Left = 412
          Height = 23
          Top = 14
          Width = 160
        end
      end
    end
    object tabMarkers: TTabSheet
      Caption = 'Markers'
      ClientHeight = 437
      ClientWidth = 586
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object memoCommentMarkers: TMemo
        Align = alClient
        OnChange = SomethingChanged
        TabOrder = 0
        Height = 326
        Top = 111
        Width = 586
      end
      object PanelMarkersTop: TPanel
        Align = alTop
        BevelOuter = bvNone
        ClientHeight = 111
        ClientWidth = 586
        FullRepaint = False
        TabOrder = 1
        Height = 111
        Width = 586
        object Label18: TLabel
          BorderSpacing.OnChange = nil
          Caption = 'Special comment markers'
          Color = clNone
          Left = 4
          Height = 20
          Top = 87
          Width = 142
        end
        object rgCommentMarkers: TRadioGroup
          BorderSpacing.OnChange = nil
          Caption = 'Comment marker treatment'
          ItemIndex = 1
          Items.Strings = (
            'Ignore special comment markers'
            'Include all comments but remove special comment markers'
            'Include only comments with special comment markers'
          )
          OnClick = rgCommentMarkersClick
          ParentColor = True
          Left = 4
          Height = 80
          Width = 541
        end
      end
    end
    object tabSourceFiles: TTabSheet
      Caption = 'Source Files'
      ClientHeight = 437
      ClientWidth = 586
      ImageIndex = 3
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object memoFiles: TMemo
        Align = alClient
        OnChange = SomethingChanged
        ScrollBars = ssBoth
        TabOrder = 0
        WordWrap = False
        Height = 330
        Top = 66
        Width = 586
      end
      object PanelSourceFilesBottom: TPanel
        Align = alBottom
        BevelOuter = bvNone
        ClientHeight = 41
        ClientWidth = 586
        FullRepaint = False
        TabOrder = 1
        Height = 41
        Top = 396
        Width = 586
        object btnBrowseSourceFiles: TButton
          Caption = 'Browse'
          OnClick = btnBrowseSourceFilesClick
          TabOrder = 0
          Left = 8
          Height = 25
          Top = 8
          Width = 75
        end
      end
      object PanelSourceFilesTop: TPanel
        Align = alTop
        BevelOuter = bvNone
        ClientHeight = 66
        ClientWidth = 586
        FullRepaint = False
        TabOrder = 2
        Height = 66
        Width = 586
        object Label8: TLabel
          Anchors = [akTop, akLeft, akRight]
          Caption = 'Add the full paths of all the source files you wish to include in your project. The directories for each file will be automatically added to the "Include" directories if you use the "Browse" button to add the source files.'
          Color = clNone
          WordWrap = True
          Left = 8
          Height = 51
          Top = 8
          Width = 564
        end
      end
    end
    object tabIncludeDirectories: TTabSheet
      Caption = 'Include Directories'
      ClientHeight = 437
      ClientWidth = 586
      ImageIndex = 4
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object memoIncludeDirectories: TMemo
        Align = alClient
        OnChange = SomethingChanged
        ScrollBars = ssBoth
        TabOrder = 0
        WordWrap = False
        Height = 331
        Top = 65
        Width = 586
      end
      object PanelIncludeDirectoriesBottom: TPanel
        Align = alBottom
        BevelOuter = bvNone
        ClientHeight = 41
        ClientWidth = 586
        FullRepaint = False
        TabOrder = 1
        Height = 41
        Top = 396
        Width = 586
        object btnBrowseIncludeDirectory: TButton
          Caption = 'Browse'
          OnClick = btnBrowseIncludeDirectoryClick
          TabOrder = 0
          Left = 8
          Height = 25
          Top = 8
          Width = 75
        end
      end
      object PanelIncludeDirectoriesTop: TPanel
        Align = alTop
        BevelOuter = bvNone
        ClientHeight = 65
        ClientWidth = 586
        FullRepaint = False
        TabOrder = 2
        Height = 65
        Width = 586
        object Label9: TLabel
          Anchors = [akTop, akLeft, akRight]
          Caption = 'If any of you source files have include files, you need to give the directory where those include files are located.  (See the Delphi help on $I if you don''t know what and include file is.)'
          Color = clNone
          WordWrap = True
          Left = 8
          Height = 36
          Top = 8
          Width = 562
        end
      end
    end
    object tabDefines: TTabSheet
      Caption = 'Defines'
      ClientHeight = 437
      ClientWidth = 586
      ImageIndex = 5
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object PanelDefinesTop: TPanel
        Align = alTop
        BevelOuter = bvNone
        ClientHeight = 76
        ClientWidth = 586
        FullRepaint = False
        TabOrder = 1
        Height = 76
        Width = 586
        object Label12: TLabel
          Anchors = [akTop, akLeft, akRight]
          Caption = 'If any "conditonal defines" are used in your program, list them here.  Your compiler may have some "conditional defines" already defined.  For example "VER150" is predefined in Delphi 7.  See the help on "conditional compilation" in your compiler for more information.'
          Color = clNone
          WordWrap = True
          Left = 6
          Height = 48
          Top = 8
          Width = 568
        end
      end
      object memoDefines: TMemo
        Align = alClient
        OnChange = SomethingChanged
        ScrollBars = ssBoth
        TabOrder = 0
        WordWrap = False
        Height = 361
        Top = 76
        Width = 586
      end
    end
    object tabGenerate: TTabSheet
      Caption = 'Generate'
      ClientHeight = 437
      ClientWidth = 586
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object memoMessages: TMemo
        Align = alClient
        ScrollBars = ssBoth
        TabOrder = 0
        Height = 299
        Top = 97
        Width = 586
      end
      object Panel1: TPanel
        Align = alBottom
        BevelOuter = bvNone
        ClientHeight = 41
        ClientWidth = 586
        FullRepaint = False
        TabOrder = 1
        Height = 41
        Top = 396
        Width = 586
        object btnGenerateWebPages: TButton
          Caption = 'Generate documentation'
          OnClick = btnGenerateWebPagesClick
          TabOrder = 0
          Left = 8
          Height = 25
          Top = 8
          Width = 185
        end
      end
      object PanelGenerateTop: TPanel
        Align = alTop
        BevelOuter = bvNone
        ClientHeight = 97
        ClientWidth = 586
        FullRepaint = False
        TabOrder = 2
        Height = 97
        Width = 586
        object Label10: TLabel
          Anchors = [akTop, akLeft, akRight]
          Caption = 'When you click the "Generate web pages" button, Help Generator will begin to process your input files and create web pages for them.  Messages describing what is happening will appear in the area below.  You can control how many messages appear using the "Message Level" on the Options tab. When it is done, a preview of the web pages will appear on the "Web Page" tab.'
          Color = clNone
          WordWrap = True
          Left = 8
          Height = 82
          Top = 8
          Width = 564
        end
      end
    end
    object tabWebPage: TTabSheet
      Caption = 'Web Page'
      ClientHeight = 437
      ClientWidth = 586
      ImageIndex = 1
      Left = 2
      Height = 437
      Top = 28
      Width = 586
      object MemoCommandLog: TMemo
        Align = alClient
        ReadOnly = True
        ScrollBars = ssAutoBoth
        TabOrder = 0
        Height = 319
        Top = 118
        Width = 586
      end
      object PanelWebPageTop: TPanel
        Align = alTop
        BevelOuter = bvNone
        ClientHeight = 118
        ClientWidth = 586
        FullRepaint = False
        TabOrder = 1
        Height = 118
        Width = 586
        object LabelHtmlBrowserCommand: TLabel
          BorderSpacing.OnChange = nil
          Caption = 'Command to run browser: (%s will be replaced with HTML filename, %% with %)'
          Color = clNone
          Left = 14
          Height = 22
          Top = 52
          Width = 486
        end
        object Label13: TLabel
          BorderSpacing.OnChange = nil
          Caption = 'TODO: here should be embedded html browser component. But for now this just runs external browser.'
          Color = clNone
          WordWrap = True
          Left = 14
          Height = 30
          Top = 12
          Width = 538
        end
        object EditHtmlBrowserCommand: TEdit
          BorderSpacing.OnChange = nil
          TabOrder = 0
          Text = 'sensible-browser %s'
          Left = 14
          Height = 23
          Top = 76
          Width = 304
        end
      end
    end
  end
  object lbNavigation: TListBox
    Align = alLeft
    BorderSpacing.OnChange = nil
    OnClick = lbNavigationClick
    TabOrder = 1
    TopIndex = -1
    Height = 467
    Width = 144
  end
  object PasDoc1: TPasDoc
    OnWarning = PasDoc1Warning
    OnMessage = PasDoc1Warning
    StarStyleOnly = True
    CommentMarkers.Strings = (
      '**'
      '**'
    )
    MarkerOptional = True
    Generator = HtmlDocGenerator
    left = 136
    top = 528
  end
  object HtmlDocGenerator: THTMLDocGenerator
    CSS = 'body { font-family: Verdana,Arial; '#10'  color: black; background-color: white; '#10'  font-size: 12px; }'#10'body.navigationframe { font-family: Verdana,Arial; '#10'  color: white; background-color: #787878; '#10'  font-size: 12px; }'#10#10'img { border:0px; }'#10#10'a:link {color:#C91E0C; text-decoration: none; }'#10'a:visited {color:#7E5C31; text-decoration: none; }'#10'a:hover {text-decoration: underline; }'#10'a:active {text-decoration: underline; }'#10#10'a.navigation:link { color: white; text-decoration: none; font-size: 12px;}'#10'a.navigation:visited { color: white; text-decoration: none; font-size: 12px;}'#10'a.navigation:hover { color: white; font-weight: bold; '#10'  text-decoration: none; font-size: 12px; }'#10'a.navigation:active { color: white; text-decoration: none; font-size: 12px;}'#10#10'a.bold:link {color:#C91E0C; text-decoration: none; font-weight:bold; }'#10'a.bold:visited {color:#7E5C31; text-decoration: none; font-weight:bold; }'#10'a.bold:hover {text-decoration: underline; font-weight:bold; }'#10'a.bold:active {text-decoration: underline; font-weight:bold; }'#10#10'a.section {color: green; text-decoration: none; font-weight: bold; }'#10'a.section:hover {color: green; text-decoration: underline; font-weight: bold; }'#10#10'ul.useslist a:link {color:#C91E0C; text-decoration: none; font-weight:bold; }'#10'ul.useslist a:visited {color:#7E5C31; text-decoration: none; font-weight:bold; }'#10'ul.useslist a:hover {text-decoration: underline; font-weight:bold; }'#10'ul.useslist a:active {text-decoration: underline; font-weight:bold; }'#10#10'ul.hierarchy { list-style-type:none; }'#10'ul.hierarchylevel { list-style-type:none; }'#10#10'p.unitlink a:link {color:#C91E0C; text-decoration: none; font-weight:bold; }'#10'p.unitlink a:visited {color:#7E5C31; text-decoration: none; font-weight:bold; }'#10'p.unitlink a:hover {text-decoration: underline; font-weight:bold; }'#10'p.unitlink a:active {text-decoration: underline; font-weight:bold; }'#10#10'tr.list { background: #FFBF44; }'#10'tr.list2 { background: #FFC982; }'#10'tr.listheader { background: #C91E0C; color: white; }'#10#10'table { border-spacing:2px; padding:4px; width:100%; }'#10#10'table.markerlegend { width:auto; }'#10'table.markerlegend td.legendmarker { text-align:center; }'#10#10'table.sections { background:white; }'#10'table.sections td {background:lightgray; }'#10#10'table.summary td.itemcode { width:100%; }'#10'table.detail td.itemcode { width:100%; }'#10#10'td { vertical-align:top; padding:4px; }'#10#10'td.itemname {white-space:nowrap; }'#10'td.itemunit {white-space:nowrap; }'#10'td.itemdesc { width:100%; }'#10#10'div.nodescription {color:red;}'#10'dl.parameters {;}'#10'dl.parameters dt {color:blue;}'#10'dl.parameters dd {;}'#10#10'/* Style applied to Pascal code in documentation '#10'   (e.g. produced by @longcode tag) } */'#10'span.pascal_string { color: #000080; }'#10'span.pascal_keyword { font-weight: bolder; }'#10'span.pascal_comment { color: #000080; font-style: italic; }'#10'span.pascal_compiler_comment { color: #008000; }'#10'span.pascal_numeric { }'#10'span.pascal_hex { }'#10#10'p.hint_directive { color: red; }'#10#10'input#search_text { }'#10'input#search_submit_button { }'#10#10'acronym.mispelling { background-color: #ffa; }'#10
    OnMessage = nil
    WriteUsesClause = True
    left = 168
    top = 528
  end
  object OpenDialog1: TOpenDialog
    Options = [ofHideReadOnly, ofAllowMultiSelect, ofFileMustExist, ofEnableSizing]
    Title = 'Open existing file'
    Filter = 'Delphi source files *.pas|*.pas|Free Pascal source files *.pp|*.pp|All Pascal source files *.pas, *.pp|*.pas;*.pp|All Files *.*|*.*'
    FilterIndex = 3
    Title = 'Open existing file'
    top = 528
  end
  object SaveDialog1: TSaveDialog
    Title = 'Save file as'
    DefaultExt = '.pds'
    Filter = 'PasDoc GUI Settings (*.pds)|*.pds'
    FilterIndex = 0
    Title = 'Save file as'
    left = 96
    top = 528
  end
  object OpenDialog2: TOpenDialog
    Title = 'Open existing file'
    DefaultExt = '.pds'
    Filter = 'PasDoc GUI Settings (*.pds)|*.pds'
    FilterIndex = 0
    Title = 'Open existing file'
    left = 64
    top = 528
  end
  object MainMenu1: TMainMenu
    left = 32
    top = 528
    object MenuFile: TMenuItem
      Caption = '&File'
      object MenuNew: TMenuItem
        Caption = '&New'
        OnClick = New1Click
      end
      object MenuOpen: TMenuItem
        Caption = '&Open ...'
        OnClick = btnOpenClick
      end
      object MenuSave: TMenuItem
        Caption = '&Save ...'
        OnClick = Save1Click
      end
      object MenuExit: TMenuItem
        Caption = '&Exit'
        OnClick = Exit1Click
      end
    end
    object MenuHelp: TMenuItem
      Caption = '&Help'
      object MenuAbout: TMenuItem
        Caption = '&About'
        OnClick = MenuAboutClick
      end
    end
  end
  object TexDocGenerator: TTexDocGenerator
    WriteUsesClause = True
    left = 200
    top = 528
  end
  object DocBrowserProcess: TProcess
    Priority = ppNormal
    left = 280
    top = 528
  end
  object HtmlHelpDocGenerator: THTMLHelpDocGenerator
    CSS = 'body { font-family: Verdana,Arial; '#10'  color: black; background-color: white; '#10'  font-size: 12px; }'#10'body.navigationframe { font-family: Verdana,Arial; '#10'  color: white; background-color: #787878; '#10'  font-size: 12px; }'#10#10'img { border:0px; }'#10#10'a:link {color:#C91E0C; text-decoration: none; }'#10'a:visited {color:#7E5C31; text-decoration: none; }'#10'a:hover {text-decoration: underline; }'#10'a:active {text-decoration: underline; }'#10#10'a.navigation:link { color: white; text-decoration: none; font-size: 12px;}'#10'a.navigation:visited { color: white; text-decoration: none; font-size: 12px;}'#10'a.navigation:hover { color: white; font-weight: bold; '#10'  text-decoration: none; font-size: 12px; }'#10'a.navigation:active { color: white; text-decoration: none; font-size: 12px;}'#10#10'a.bold:link {color:#C91E0C; text-decoration: none; font-weight:bold; }'#10'a.bold:visited {color:#7E5C31; text-decoration: none; font-weight:bold; }'#10'a.bold:hover {text-decoration: underline; font-weight:bold; }'#10'a.bold:active {text-decoration: underline; font-weight:bold; }'#10#10'a.section {color: green; text-decoration: none; font-weight: bold; }'#10'a.section:hover {color: green; text-decoration: underline; font-weight: bold; }'#10#10'ul.useslist a:link {color:#C91E0C; text-decoration: none; font-weight:bold; }'#10'ul.useslist a:visited {color:#7E5C31; text-decoration: none; font-weight:bold; }'#10'ul.useslist a:hover {text-decoration: underline; font-weight:bold; }'#10'ul.useslist a:active {text-decoration: underline; font-weight:bold; }'#10#10'ul.hierarchy { list-style-type:none; }'#10'ul.hierarchylevel { list-style-type:none; }'#10#10'p.unitlink a:link {color:#C91E0C; text-decoration: none; font-weight:bold; }'#10'p.unitlink a:visited {color:#7E5C31; text-decoration: none; font-weight:bold; }'#10'p.unitlink a:hover {text-decoration: underline; font-weight:bold; }'#10'p.unitlink a:active {text-decoration: underline; font-weight:bold; }'#10#10'tr.list { background: #FFBF44; }'#10'tr.list2 { background: #FFC982; }'#10'tr.listheader { background: #C91E0C; color: white; }'#10#10'table { border-spacing:2px; padding:4px; width:100%; }'#10#10'table.markerlegend { width:auto; }'#10'table.markerlegend td.legendmarker { text-align:center; }'#10#10'table.sections { background:white; }'#10'table.sections td {background:lightgray; }'#10#10'table.summary td.itemcode { width:100%; }'#10'table.detail td.itemcode { width:100%; }'#10#10'td { vertical-align:top; padding:4px; }'#10#10'td.itemname {white-space:nowrap; }'#10'td.itemunit {white-space:nowrap; }'#10'td.itemdesc { width:100%; }'#10#10'div.nodescription {color:red;}'#10'dl.parameters {;}'#10'dl.parameters dt {color:blue;}'#10'dl.parameters dd {;}'#10#10'/* Style applied to Pascal code in documentation '#10'   (e.g. produced by @longcode tag) } */'#10'span.pascal_string { color: #000080; }'#10'span.pascal_keyword { font-weight: bolder; }'#10'span.pascal_comment { color: #000080; font-style: italic; }'#10'span.pascal_compiler_comment { color: #008000; }'#10'span.pascal_numeric { }'#10'span.pascal_hex { }'#10#10'p.hint_directive { color: red; }'#10#10'input#search_text { }'#10'input#search_submit_button { }'#10#10'acronym.mispelling { background-color: #ffa; }'#10
    left = 232
    top = 528
  end
end
