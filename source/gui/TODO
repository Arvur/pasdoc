- These edit boxes with URLs (graphviz, aspell) should be changed to
  a labels that, when clicked, fire up WWW browser with given address.
  These labels should have blue color and cursor changed to a hand, to look like
  link in WWW browser.
  After all, pasdoc_gui is already able to fire up WWW browser to 
  view generated HTML docs.

- Move interface from TPageControl to TNoteBook with ShowTabs = false,
  see "Revisions to GUI" thread on pasdoc-main on 2005-10-06.

- reflect in gui --implicit-visibility option, --no-macro option

- Provide easy way to look into documentation for given option,
  wiki page documenting given feature. pasdoc_gui would automatically
  fire up user's WWW browser with appropriate page, e.g.
  [http://pasdoc.sipsolutions.net/AutoAbstractOption] would be the help
  page for "Automatically deduce @abstract..." checkbox.

  See e.g. Gimp, that also keeps documentation in HTML, and allows
  user to easily open WWW browser with docs for given control.

  We already have edit box that allows user to specify browser command,
  so this is simple.

  When we will learn how to generate nice offline documentation
  from our moinmoin wiki and we will distribute pasdoc + pasdoc_gui +
  offline docs in one package, this will fire up WWW browser
  with a local HTML page (still, configuration option will
  be added to allow users who are always online to see the latest
  version of documentation from WWW, instead of looking at offline
  version).

- Move "Generate" and "Web page" tabs to a separate window which opens once
  the user generates the documentation.

  The "Generate documentation" button should be then moved to some toolbar
  and as a menu item. Then we could add some shortcut like Ctrl+G
  (or maybe F9, to follow Delphi and Lazarus shortcut that we all know ?)
  to trigger it. The "command to run browser" edit box should be probably
  moved to a separate window like "Preferences", and then it's saved
  in user configuration file.

- Default value of EditHtmlBrowserCommand.Text
  should be read from some user's config file.

  Also this should allow executing "default shell association"
  for HTML under Win32, using ShellExecute.
  Maybe using rundll instead of coding it ?
  Under UNIXes the equivalent is already available, just use `run-mailcap'.

- Layout of controls is not controlled as good as it should be.
  You may encounter problems if you use unusually large fonts etc.
  This is partially because of lame (nonexistent?) Delphi positioning
  scheme, partially because of problems with keeping such things
  portable in Lazarus (across GTK and Win32 component sets).

  It's a shame for me, but for now each time I switched between
  GTK and Win32 I found that I have to readjust layout of some things
  a little... Hopefully these issues are now gone and layout looks good
  for everyone, but I'm not happy with it, really.

  In the long run we should try to use auto-sizing and anchors as 
  much as possible to layout everything. Lazarus wiki has some useful 
  notes about using anchor sides 
  ([http://wiki.lazarus.freepascal.org/index.php/Anchor_Sides]). 

- pasdoc_gui should allow user to configure default state of "Defines".
  Actually, it should allow user to configure default state of *all* options.
  E.g. maybe someone always wants to make default language of docs = Polish ?
  Maybe someone wants default verbosity = 6 ?
  Maybe someone has some include directory with his include files that
  he wants to always be added to "Include dirs" by default ?
  This can all be very nicely solved by storing some "default project settings"
  in user's directory and loading it on program start (and menu "New" execution).
  Then the code that currently loads contents from Ini file can be modified
  to actually have really good default values, and instead of using "SetDefaults"
  we simply load from a file where "default project settings" for this user
  are stored (like ~/.pasdoc_gui/default.pds on Unixes)
